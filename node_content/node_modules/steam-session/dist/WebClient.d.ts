/// <reference types="node" />
/// <reference types="node" />
/// <reference types="node" />
/// <reference types="node" />
/// <reference types="node" />
import HTTPS from 'https';
import { ParsedUrlQueryInput } from 'querystring';
import { IncomingMessage, OutgoingHttpHeaders } from 'http';
import { Readable as ReadableStream } from 'stream';
export interface WebClientOptions {
    agent?: HTTPS.Agent;
}
export interface RequestOptions {
    headers?: OutgoingHttpHeaders;
    queryString?: ParsedUrlQueryInput;
}
export interface ResponseData {
    res: IncomingMessage;
    body: any;
}
export default class WebClient {
    _agent: HTTPS.Agent;
    constructor(options: WebClientOptions);
    get(url: string, options?: RequestOptions): Promise<ResponseData>;
    post(url: string, body?: string | Buffer, options?: RequestOptions): Promise<ResponseData>;
    postEncoded(url: string, body: object, encoding?: string, options?: RequestOptions): Promise<ResponseData>;
    _req(url: string, body: ReadableStream | string | Buffer | null, options: HTTPS.RequestOptions): Promise<ResponseData>;
}
//# sourceMappingURL=WebClient.d.ts.map